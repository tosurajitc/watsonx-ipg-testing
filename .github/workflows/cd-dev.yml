name: Deploy to Development Environment (IBM Cloud)

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  workflow_dispatch:
    inputs:
      deploy_type:
        description: 'Type of deployment'
        required: true
        default: 'standard'
        type: choice
        options:
          - standard
          - hotfix
          - rollback

permissions:
  contents: read
  id-token: write
  deployments: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements/dev.txt ]; then pip install -r requirements/dev.txt; fi
          if [ -f requirements/test.txt ]; then pip install -r requirements/test.txt; fi
      
      - name: Run linting
        run: |
          flake8 src/ tests/ || echo "Linting issues found, but continuing build"
      
      - name: Run unit tests
        id: unit-tests
        run: |
          mkdir -p test-reports
          pytest tests/unit/ -v \
            --junitxml=test-reports/unit-test-results.xml \
            --cov=src \
            --cov-report=xml:test-reports/coverage.xml \
            || echo "::set-output name=test_status=failed"
      
      - name: Run integration tests
        id: integration-tests
        run: |
          mkdir -p test-reports
          pytest tests/integration/ -v \
            --junitxml=test-reports/integration-test-results.xml \
            || echo "::set-output name=test_status=failed"
      
      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: test-reports/
          retention-days: 5
      
      - name: Check Test Results
        if: steps.unit-tests.outputs.test_status == 'failed' || steps.integration-tests.outputs.test_status == 'failed'
        run: exit 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # ... [rest of the existing file remains the same]